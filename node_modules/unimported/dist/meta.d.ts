import { MapLike } from 'typescript';
import { EntryConfig } from './config';
import { Context, PackageJson } from './index';
export declare function hasPackage(packageJson: PackageJson, name: string): boolean;
export declare function typedBoolean<T>(value: T): value is Exclude<T, false | null | undefined | '' | 0>;
export declare const readTsconfig: () => {
    compilerOptions: import("typescript").CompilerOptions;
} | undefined;
export declare function getAliases(entryFile: EntryConfig): Promise<MapLike<string[]>>;
export declare function getDependencies(projectPath: string): Promise<Context['dependencies']>;
export declare function getPeerDependencies(projectPath: string): Promise<Context['peerDependencies']>;
